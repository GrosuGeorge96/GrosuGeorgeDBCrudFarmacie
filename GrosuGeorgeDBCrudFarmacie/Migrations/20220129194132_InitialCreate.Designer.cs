// <auto-generated />
using System;
using GrosuGeorgeDBCrudFarmacie.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GrosuGeorgeDBCrudFarmacie.Migrations
{
    [DbContext(typeof(GrosuGeorgeDBCrudFarmacieContext))]
    [Migration("20220129194132_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Grosu_George.Models.FarmacieOras", b =>
                {
                    b.Property<int>("FarmacieOrasID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FarmaciiID");

                    b.Property<int>("ProdusID");

                    b.Property<int?>("ProduseID");

                    b.HasKey("FarmacieOrasID");

                    b.HasIndex("FarmaciiID");

                    b.HasIndex("ProduseID");

                    b.ToTable("FarmacieOras");
                });

            modelBuilder.Entity("Grosu_George.Models.Farmacii", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("farmacieAdr")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("farmacieDen")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.HasKey("ID");

                    b.ToTable("Farmacii");
                });

            modelBuilder.Entity("Grosu_George.Models.Oras", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("orasDen")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("ID");

                    b.ToTable("Oras");
                });

            modelBuilder.Entity("Grosu_George.Models.Produse", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FarmaciiID");

                    b.Property<int>("OrasID");

                    b.Property<DateTime>("produsExp");

                    b.Property<string>("produsNume")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("produsProd")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.HasKey("ID");

                    b.HasIndex("FarmaciiID");

                    b.HasIndex("OrasID");

                    b.ToTable("Produse");
                });

            modelBuilder.Entity("Grosu_George.Models.FarmacieOras", b =>
                {
                    b.HasOne("Grosu_George.Models.Farmacii", "Farmacii")
                        .WithMany("FarmacieOras")
                        .HasForeignKey("FarmaciiID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Grosu_George.Models.Produse", "Produse")
                        .WithMany()
                        .HasForeignKey("ProduseID");
                });

            modelBuilder.Entity("Grosu_George.Models.Produse", b =>
                {
                    b.HasOne("Grosu_George.Models.Farmacii", "Farmacii")
                        .WithMany()
                        .HasForeignKey("FarmaciiID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Grosu_George.Models.Oras", "Oras")
                        .WithMany("Produse")
                        .HasForeignKey("OrasID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
